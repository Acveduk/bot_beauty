from aiogram import types
from aiogram.dispatcher import FSMContext

from data.prolong_sub import prolong_sub
from filters import CheckUsers
from loader import dp, bot
from states.state_users import Metro, Create
from utils.db_api import postgres


@dp.message_handler(CheckUsers(), text='üìù –°–æ–∑–¥–∞—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ —É—Å–ª—É–≥—É')
async def create(message: types.Message, state: FSMContext):
    await prolong_sub(user_id=message.from_user.id)
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.row('‚¨ÖÔ∏è –û—Ç–º–µ–Ω–∞')
    city = await postgres.select_city(user_id=message.from_user.id)
    await state.update_data(city=city[0]['city'])
    await bot.send_message(chat_id=message.from_user.id,
                           text='–î–ª—è —Å–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–∏ –∑–∞—è–≤–∫–∏ –≤–∞–º –Ω–∞–¥–æ —É–∫–∞–∑–∞—Ç—å: \n\n'
                                '‚úÖ –°—Ç–∞–Ω—Ü–∏—é –º–µ—Ç—Ä–æ\n'
                                '‚úÖ –£—Å–ª—É–≥—É\n'
                                '‚úÖ –î–∞—Ç—É –∏ –≤—Ä–µ–º—è\n'
                                '‚úÖ –û–ø–∏—Å–∞–Ω–∏–µ —É—Å—É–≥–∏\n'
                                '‚úÖ –§–æ—Ç–æ –ø—Ä–∏–º–µ—Ä–∞ —Ä–∞–±–æ—Ç—ã')
    await bot.send_message(chat_id=message.from_user.id,
                           text='–í–≤–µ–¥–∏—Ç–µ —Å—Ç–∞–Ω—Ü–∏—é –º–µ—Ç—Ä–æ',
                           reply_markup=keyboard)

    await Create.metro.set()


@dp.message_handler(text='‚¨ÖÔ∏è –û—Ç–º–µ–Ω–∞', state=Create.metro)
async def services(message: types.Message, state: FSMContext):
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.row('‚ù§Ô∏è–ò–∑–±—Ä–∞–Ω–Ω–æ–µ', 'üìù –°–æ–∑–¥–∞—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ —É—Å–ª—É–≥—É')
    keyboard.row('üèÖ –ù–∞–π—Ç–∏ –º–∞—Å—Ç–µ—Ä–∞ –ø–æ —Ä–µ–π—Ç–∏–Ω–≥—É', 'üí¨ –ö–∞–Ω–∞–ª/–ß–∞—Ç')
    keyboard.row('üí∞ –ö–æ—à–µ–ª–µ–∫', 'üìÇ –ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å')
    keyboard.row('‚ÑπÔ∏è–ö–∞–∫ —Ä–∞–±–æ—Ç–∞—Ç—å —Å –±–æ—Ç–æ–º')
    await bot.send_message(chat_id=message.from_user.id,
                           text='–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –º–µ–Ω—é',
                           reply_markup=keyboard)
    await state.finish()


@dp.message_handler(state=Create.metro)
async def metro(message: types.Message, state: FSMContext):
    metro = message.text
    await state.update_data(metro=metro)
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.row('üíÖ –ú–∞–Ω–∏–∫—é—Ä/–ü–µ–¥–∏–∫—é—Ä', 'üíá‚Äç‚ôÄÔ∏è–ü–∞—Ä–∏–∫–º–∞—Ö–µ—Ä')
    keyboard.row('üíã –í–∏–∑–∞–∂', 'üßñ‚Äç‚ôÄÔ∏è–î—Ä—É–≥–∏–µ —É—Å–ª—É–≥–∏')
    keyboard.row('‚¨ÖÔ∏è –ù–∞–∑–∞–¥', '–û—Ç–º–µ–Ω–∞')
    await bot.send_message(chat_id=message.from_user.id,
                           text='–í—ã —É—Å–ø–µ—à–Ω–æ –≤–≤–µ–ª–∏ —Å—Ç–∞–Ω—Ü–∏—é –º–µ—Ç—Ä–æ.\n'
                                '–í—ã–±–µ—Ä–∏—Ç–µ –≤–∏–¥ —É—Å–ª—É–≥–∏, –∫–æ—Ç–æ—Ä—É—é —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∏—Ç—å', reply_markup=keyboard)
    await Create.services.set()


@dp.message_handler(text='‚¨ÖÔ∏è –ù–∞–∑–∞–¥', state=Create.services)
async def services(message: types.Message, state: FSMContext):
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.row('‚¨ÖÔ∏è –û—Ç–º–µ–Ω–∞')
    await bot.send_message(chat_id=message.from_user.id,
                           text='–í–≤–µ–¥–∏—Ç–µ —Å—Ç–∞–Ω—Ü–∏—é –º–µ—Ç—Ä–æ',
                           reply_markup=keyboard)
    await Create.metro.set()

@dp.message_handler(text='–û—Ç–º–µ–Ω–∞', state=Create.services)
async def services(message: types.Message, state: FSMContext):
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.row('‚ù§Ô∏è–ò–∑–±—Ä–∞–Ω–Ω–æ–µ', 'üìù –°–æ–∑–¥–∞—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ —É—Å–ª—É–≥—É')
    keyboard.row('üèÖ –ù–∞–π—Ç–∏ –º–∞—Å—Ç–µ—Ä–∞ –ø–æ —Ä–µ–π—Ç–∏–Ω–≥—É', 'üí¨ –ö–∞–Ω–∞–ª/–ß–∞—Ç')
    keyboard.row('üí∞ –ö–æ—à–µ–ª–µ–∫', 'üìÇ –ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å')
    keyboard.row('‚ÑπÔ∏è–ö–∞–∫ —Ä–∞–±–æ—Ç–∞—Ç—å —Å –±–æ—Ç–æ–º')
    await bot.send_message(chat_id=message.from_user.id,
                           text='–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –º–µ–Ω—é',
                           reply_markup=keyboard)
    await state.finish()


@dp.message_handler(text='üíÖ –ú–∞–Ω–∏–∫—é—Ä/–ü–µ–¥–∏–∫—é—Ä', state=Create.services)
async def metro(message: types.Message, state: FSMContext):
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.row('üñê –ú–∞–Ω–∏–∫—é—Ä', 'ü¶∂ –ü–µ–¥–∏–∫—é—Ä')
    keyboard.row('üíÖ –£—Å–ª—É–≥–∏')
    await bot.send_message(chat_id=message.from_user.id,
                           text='–í—ã–±–µ—Ä–∏—Ç–µ —É—Å–ª—É–≥—É, –∫–æ—Ç–æ—Ä—É—é —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∏—Ç—å', reply_markup=keyboard)
    await Create.services.set()

@dp.message_handler(text='üíÖ –£—Å–ª—É–≥–∏', state=Create.services)
async def services(message: types.Message, state: FSMContext):
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.row('üíÖ –ú–∞–Ω–∏–∫—é—Ä/–ü–µ–¥–∏–∫—é—Ä', 'üíá‚Äç‚ôÄÔ∏è–ü–∞—Ä–∏–∫–º–∞—Ö–µ—Ä')
    keyboard.row('üíã –í–∏–∑–∞–∂', 'üßñ‚Äç‚ôÄÔ∏è–î—Ä—É–≥–∏–µ —É—Å–ª—É–≥–∏')
    keyboard.row('‚¨ÖÔ∏è –ù–∞–∑–∞–¥', '–û—Ç–º–µ–Ω–∞')
    await bot.send_message(chat_id=message.from_user.id,
                           text='–í—ã–±–µ—Ä–∏—Ç–µ –≤–∏–¥ —É—Å–ª—É–≥–∏, –∫–æ—Ç–æ—Ä—É—é —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∏—Ç—å',
                           reply_markup=keyboard)
    await Create.services.set()

@dp.message_handler(text='üñê –ú–∞–Ω–∏–∫—é—Ä', state=Create.services)
async def metro(message: types.Message, state: FSMContext):
    service = '–ú–∞–Ω–∏–∫—é—Ä'
    await state.update_data(service=service)
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.row('‚¨ÖÔ∏è –ù–∞–∑–∞–¥', '–û—Ç–º–µ–Ω–∞')
    await bot.send_message(chat_id=message.from_user.id,
                           text='–í—ã —É—Å–ø–µ—à–Ω–æ –≤—ã–±—Ä–∞–ª–∏ —É—Å–ª—É–≥—É\n'
                                '–í–≤–µ–¥–∏—Ç–µ –∂–µ–ª–∞–µ–º—É—é –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è –æ–∫–∞–∑–∞–Ω–∏—è —É—Å–ª—É–≥–∏',
                           reply_markup=keyboard)
    await Create.date_time.set()


@dp.message_handler(text='ü¶∂ –ü–µ–¥–∏–∫—é—Ä', state=Create.services)
async def metro(message: types.Message, state: FSMContext):
    service = '–ü–µ–¥–∏–∫—é—Ä'
    await state.update_data(service=service)
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.row('‚¨ÖÔ∏è –ù–∞–∑–∞–¥', '–û—Ç–º–µ–Ω–∞')
    await bot.send_message(chat_id=message.from_user.id,
                           text='–í—ã —É—Å–ø–µ—à–Ω–æ –≤—ã–±—Ä–∞–ª–∏ —É—Å–ª—É–≥—É\n'
                                '–í–≤–µ–¥–∏—Ç–µ –∂–µ–ª–∞–µ–º—É—é –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è –æ–∫–∞–∑–∞–Ω–∏—è —É—Å–ª—É–≥–∏',
                           reply_markup=keyboard)
    await Create.date_time.set()


@dp.message_handler(text='üíá‚Äç‚ôÄÔ∏è–ü–∞—Ä–∏–∫–º–∞—Ö–µ—Ä', state=Create.services)
async def metro(message: types.Message, state: FSMContext):
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.row('üíá‚Äç‚ôÄÔ∏è–°—Ç—Ä–∏–∂–∫–∞', 'üíá‚Äç‚ôÇÔ∏è–ú—É–∂—Å–∫–∞—è —Å—Ç—Ä–∏–∂–∫–∞')
    keyboard.row('üíÜ‚Äç‚ôÄÔ∏è–£–∫–ª–∞–¥–∫–∞ –∏ –ø—Ä–∏—á–µ—Å–∫–∏', 'üë©‚Äçü¶∞ –û–∫—Ä–∞—à–∏–≤–∞–Ω–∏–µ')
    keyboard.row('üë©‚Äç‚öïÔ∏è–£—Ö–æ–¥ –∏ –ª–µ—á–µ–Ω–∏–µ')
    keyboard.row('üíÖ –£—Å–ª—É–≥–∏')
    await bot.send_message(chat_id=message.from_user.id,
                           text='–í—ã–±–µ—Ä–∏—Ç–µ —É—Å–ª—É–≥—É, –∫–æ—Ç–æ—Ä—É—é —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∏—Ç—å', reply_markup=keyboard)
    await Create.services.set()


@dp.message_handler(text='üíá‚Äç‚ôÄÔ∏è–°—Ç—Ä–∏–∂–∫–∞', state=Create.services)
async def metro(message: types.Message, state: FSMContext):
    service = '–°—Ç—Ä–∏–∂–∫–∞'
    await state.update_data(service=service)
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.row('‚¨ÖÔ∏è –ù–∞–∑–∞–¥', '–û—Ç–º–µ–Ω–∞')
    await bot.send_message(chat_id=message.from_user.id,
                           text='–í—ã —É—Å–ø–µ—à–Ω–æ –≤—ã–±—Ä–∞–ª–∏ —É—Å–ª—É–≥—É\n'
                                '–í–≤–µ–¥–∏—Ç–µ –∂–µ–ª–∞–µ–º—É—é –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è –æ–∫–∞–∑–∞–Ω–∏—è —É—Å–ª—É–≥–∏',
                           reply_markup=keyboard)
    await Create.date_time.set()


@dp.message_handler(text='üíá‚Äç‚ôÇÔ∏è–ú—É–∂—Å–∫–∞—è —Å—Ç—Ä–∏–∂–∫–∞', state=Create.services)
async def metro(message: types.Message, state: FSMContext):
    service = '–ú—É–∂—Å–∫–∞—è —Å—Ç—Ä–∏–∂–∫–∞'
    await state.update_data(service=service)
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.row('‚¨ÖÔ∏è –ù–∞–∑–∞–¥', '–û—Ç–º–µ–Ω–∞')
    await bot.send_message(chat_id=message.from_user.id,
                           text='–í—ã —É—Å–ø–µ—à–Ω–æ –≤—ã–±—Ä–∞–ª–∏ —É—Å–ª—É–≥—É\n'
                                '–í–≤–µ–¥–∏—Ç–µ –∂–µ–ª–∞–µ–º—É—é –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è –æ–∫–∞–∑–∞–Ω–∏—è —É—Å–ª—É–≥–∏',
                           reply_markup=keyboard)
    await Create.date_time.set()


@dp.message_handler(text='üíÜ‚Äç‚ôÄÔ∏è–£–∫–ª–∞–¥–∫–∞ –∏ –ø—Ä–∏—á–µ—Å–∫–∏', state=Create.services)
async def metro(message: types.Message, state: FSMContext):
    service = '–£–∫–ª–∞–¥–∫–∞ –∏ –ø—Ä–∏—á–µ—Å–∫–∏'
    await state.update_data(service=service)
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.row('‚¨ÖÔ∏è –ù–∞–∑–∞–¥', '–û—Ç–º–µ–Ω–∞')
    await bot.send_message(chat_id=message.from_user.id,
                           text='–í—ã —É—Å–ø–µ—à–Ω–æ –≤—ã–±—Ä–∞–ª–∏ —É—Å–ª—É–≥—É\n'
                                '–í–≤–µ–¥–∏—Ç–µ –∂–µ–ª–∞–µ–º—É—é –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è –æ–∫–∞–∑–∞–Ω–∏—è —É—Å–ª—É–≥–∏',
                           reply_markup=keyboard)
    await Create.date_time.set()


@dp.message_handler(text='üë©‚Äçü¶∞ –û–∫—Ä–∞—à–∏–≤–∞–Ω–∏–µ', state=Create.services)
async def metro(message: types.Message, state: FSMContext):
    service = '–û–∫—Ä–∞—à–∏–≤–∞–Ω–∏–µ'
    await state.update_data(service=service)
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.row('‚¨ÖÔ∏è –ù–∞–∑–∞–¥', '–û—Ç–º–µ–Ω–∞')
    await bot.send_message(chat_id=message.from_user.id,
                           text='–í—ã —É—Å–ø–µ—à–Ω–æ –≤—ã–±—Ä–∞–ª–∏ —É—Å–ª—É–≥—É\n'
                                '–í–≤–µ–¥–∏—Ç–µ –∂–µ–ª–∞–µ–º—É—é –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è –æ–∫–∞–∑–∞–Ω–∏—è —É—Å–ª—É–≥–∏',
                           reply_markup=keyboard)
    await Create.date_time.set()


@dp.message_handler(text='üë©‚Äç‚öïÔ∏è–£—Ö–æ–¥ –∏ –ª–µ—á–µ–Ω–∏–µ', state=Create.services)
async def metro(message: types.Message, state: FSMContext):
    service = '–£—Ö–æ–¥ –∏ –ª–µ—á–µ–Ω–∏–µ'
    await state.update_data(service=service)
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.row('‚¨ÖÔ∏è –ù–∞–∑–∞–¥', '–û—Ç–º–µ–Ω–∞')
    await bot.send_message(chat_id=message.from_user.id,
                           text='–í—ã —É—Å–ø–µ—à–Ω–æ –≤—ã–±—Ä–∞–ª–∏ —É—Å–ª—É–≥—É\n'
                                '–í–≤–µ–¥–∏—Ç–µ –∂–µ–ª–∞–µ–º—É—é –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è –æ–∫–∞–∑–∞–Ω–∏—è —É—Å–ª—É–≥–∏',
                           reply_markup=keyboard)
    await Create.date_time.set()


@dp.message_handler(text='üíã –í–∏–∑–∞–∂', state=Create.services)
async def metro(message: types.Message, state: FSMContext):
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.row('üíã –ú–∞–∫–∏—è–∂', 'üëÅ –ë—Ä–æ–≤–∏')
    keyboard.row('üëÄ –†–µ—Å–Ω–∏—Ü—ã', 'üë∞‚Äç –°–≤–∞–¥–µ–±–Ω—ã–π –æ–±—Ä–∞–∑')
    keyboard.row('üíÖ –£—Å–ª—É–≥–∏')
    await bot.send_message(chat_id=message.from_user.id,
                           text='–í—ã–±–µ—Ä–∏—Ç–µ —É—Å–ª—É–≥—É, –∫–æ—Ç–æ—Ä—É—é —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∏—Ç—å', reply_markup=keyboard)
    await Create.services.set()


@dp.message_handler(text='üíã –ú–∞–∫–∏—è–∂', state=Create.services)
async def metro(message: types.Message, state: FSMContext):
    service = '–ú–∞–∫–∏—è–∂'
    await state.update_data(service=service)
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.row('‚¨ÖÔ∏è –ù–∞–∑–∞–¥', '–û—Ç–º–µ–Ω–∞')
    await bot.send_message(chat_id=message.from_user.id,
                           text='–í—ã —É—Å–ø–µ—à–Ω–æ –≤—ã–±—Ä–∞–ª–∏ —É—Å–ª—É–≥—É\n'
                                '–í–≤–µ–¥–∏—Ç–µ –∂–µ–ª–∞–µ–º—É—é –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è –æ–∫–∞–∑–∞–Ω–∏—è —É—Å–ª—É–≥–∏',
                           reply_markup=keyboard)
    await Create.date_time.set()


@dp.message_handler(text='üëÅ –ë—Ä–æ–≤–∏', state=Create.services)
async def metro(message: types.Message, state: FSMContext):
    service = '–ë—Ä–æ–≤–∏'
    await state.update_data(service=service)
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.row('‚¨ÖÔ∏è –ù–∞–∑–∞–¥', '–û—Ç–º–µ–Ω–∞')
    await bot.send_message(chat_id=message.from_user.id,
                           text='–í—ã —É—Å–ø–µ—à–Ω–æ –≤—ã–±—Ä–∞–ª–∏ —É—Å–ª—É–≥—É\n'
                                '–í–≤–µ–¥–∏—Ç–µ –∂–µ–ª–∞–µ–º—É—é –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è –æ–∫–∞–∑–∞–Ω–∏—è —É—Å–ª—É–≥–∏',
                           reply_markup=keyboard)
    await Create.date_time.set()


@dp.message_handler(text='üëÄ –†–µ—Å–Ω–∏—Ü—ã', state=Create.services)
async def metro(message: types.Message, state: FSMContext):
    service = '–†–µ—Å–Ω–∏—Ü—ã'
    await state.update_data(service=service)
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.row('‚¨ÖÔ∏è –ù–∞–∑–∞–¥', '–û—Ç–º–µ–Ω–∞')
    await bot.send_message(chat_id=message.from_user.id,
                           text='–í—ã —É—Å–ø–µ—à–Ω–æ –≤—ã–±—Ä–∞–ª–∏ —É—Å–ª—É–≥—É\n'
                                '–í–≤–µ–¥–∏—Ç–µ –∂–µ–ª–∞–µ–º—É—é –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è –æ–∫–∞–∑–∞–Ω–∏—è —É—Å–ª—É–≥–∏',
                           reply_markup=keyboard)
    await Create.date_time.set()


@dp.message_handler(text='üë∞‚Äç –°–≤–∞–¥–µ–±–Ω—ã–π –æ–±—Ä–∞–∑', state=Create.services)
async def metro(message: types.Message, state: FSMContext):
    service = '–°–≤–∞–¥–µ–±–Ω—ã–π –æ–±—Ä–∞–∑'
    await state.update_data(service=service)
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.row('‚¨ÖÔ∏è –ù–∞–∑–∞–¥', '–û—Ç–º–µ–Ω–∞')
    await bot.send_message(chat_id=message.from_user.id,
                           text='–í—ã —É—Å–ø–µ—à–Ω–æ –≤—ã–±—Ä–∞–ª–∏ —É—Å–ª—É–≥—É\n'
                                '–í–≤–µ–¥–∏—Ç–µ –∂–µ–ª–∞–µ–º—É—é –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è –æ–∫–∞–∑–∞–Ω–∏—è —É—Å–ª—É–≥–∏',
                           reply_markup=keyboard)
    await Create.date_time.set()


@dp.message_handler(text='üßñ‚Äç‚ôÄÔ∏è–î—Ä—É–≥–∏–µ —É—Å–ª—É–≥–∏', state=Create.services)
async def metro(message: types.Message, state: FSMContext):
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.row('üíÜ‚Äç‚ôÄÔ∏è–ú–∞—Å—Å–∞–∂', 'üë©‚Äç‚öïÔ∏è–î–µ–ø–∏–ª—è—Ü–∏—è –≤–æ—Å–∫–æ–º')
    keyboard.row('üßñ‚Äç‚ôÄÔ∏è–®—É–≥–∞—Ä–∏–Ω–≥', 'üß¥ –ó–∞–≥–∞—Ä –¥–æ–º–∞')
    keyboard.row('üíÖ –£—Å–ª—É–≥–∏')
    await bot.send_message(chat_id=message.from_user.id,
                           text='–í—ã–±–µ—Ä–∏—Ç–µ —É—Å–ª—É–≥—É, –∫–æ—Ç–æ—Ä—É—é —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∏—Ç—å', reply_markup=keyboard)
    await Create.services.set()


@dp.message_handler(text='üíÜ‚Äç‚ôÄÔ∏è–ú–∞—Å—Å–∞–∂', state=Create.services)
async def metro(message: types.Message, state: FSMContext):
    service = '–ú–∞—Å—Å–∞–∂'
    await state.update_data(service=service)
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.row('‚¨ÖÔ∏è –ù–∞–∑–∞–¥', '–û—Ç–º–µ–Ω–∞')
    await bot.send_message(chat_id=message.from_user.id,
                           text='–í—ã —É—Å–ø–µ—à–Ω–æ –≤—ã–±—Ä–∞–ª–∏ —É—Å–ª—É–≥—É\n'
                                '–í–≤–µ–¥–∏—Ç–µ –∂–µ–ª–∞–µ–º—É—é –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è –æ–∫–∞–∑–∞–Ω–∏—è —É—Å–ª—É–≥–∏',
                           reply_markup=keyboard)
    await Create.date_time.set()


@dp.message_handler(text='üë©‚Äç‚öïÔ∏è–î–µ–ø–∏–ª—è—Ü–∏—è –≤–æ—Å–∫–æ–º', state=Create.services)
async def metro(message: types.Message, state: FSMContext):
    service = '–î–µ–ø–∏–ª—è—Ü–∏—è –≤–æ—Å–∫–æ–º'
    await state.update_data(service=service)
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.row('‚¨ÖÔ∏è –ù–∞–∑–∞–¥', '–û—Ç–º–µ–Ω–∞')
    await bot.send_message(chat_id=message.from_user.id,
                           text='–í—ã —É—Å–ø–µ—à–Ω–æ –≤—ã–±—Ä–∞–ª–∏ —É—Å–ª—É–≥—É\n'
                                '–í–≤–µ–¥–∏—Ç–µ –∂–µ–ª–∞–µ–º—É—é –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è –æ–∫–∞–∑–∞–Ω–∏—è —É—Å–ª—É–≥–∏',
                           reply_markup=keyboard)
    await Create.date_time.set()


@dp.message_handler(text='üßñ‚Äç‚ôÄÔ∏è–®—É–≥–∞—Ä–∏–Ω–≥', state=Create.services)
async def metro(message: types.Message, state: FSMContext):
    service = '–®—É–≥–∞—Ä–∏–Ω–≥'
    await state.update_data(service=service)
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.row('‚¨ÖÔ∏è –ù–∞–∑–∞–¥', '–û—Ç–º–µ–Ω–∞')
    await bot.send_message(chat_id=message.from_user.id,
                           text='–í—ã —É—Å–ø–µ—à–Ω–æ –≤—ã–±—Ä–∞–ª–∏ —É—Å–ª—É–≥—É\n'
                                '–í–≤–µ–¥–∏—Ç–µ –∂–µ–ª–∞–µ–º—É—é –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è –æ–∫–∞–∑–∞–Ω–∏—è —É—Å–ª—É–≥–∏',
                           reply_markup=keyboard)
    await Create.date_time.set()


@dp.message_handler(text='üß¥ –ó–∞–≥–∞—Ä –¥–æ–º–∞', state=Create.services)
async def metro(message: types.Message, state: FSMContext):
    service = '–ó–∞–≥–∞—Ä –¥–æ–º–∞'
    await state.update_data(service=service)
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.row('‚¨ÖÔ∏è –ù–∞–∑–∞–¥', '–û—Ç–º–µ–Ω–∞')
    await bot.send_message(chat_id=message.from_user.id,
                           text='–í—ã —É—Å–ø–µ—à–Ω–æ –≤—ã–±—Ä–∞–ª–∏ —É—Å–ª—É–≥—É\n'
                                '–í–≤–µ–¥–∏—Ç–µ –∂–µ–ª–∞–µ–º—É—é –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è –æ–∫–∞–∑–∞–Ω–∏—è —É—Å–ª—É–≥–∏',
                           reply_markup=keyboard)
    await Create.date_time.set()


@dp.message_handler(text='‚¨ÖÔ∏è –ù–∞–∑–∞–¥', state=Create.date_time)
async def services(message: types.Message, state: FSMContext):
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.row('üíÖ –ú–∞–Ω–∏–∫—é—Ä/–ü–µ–¥–∏–∫—é—Ä', 'üíá‚Äç‚ôÄÔ∏è–ü–∞—Ä–∏–∫–º–∞—Ö–µ—Ä')
    keyboard.row('üíã –í–∏–∑–∞–∂', 'üßñ‚Äç‚ôÄÔ∏è–î—Ä—É–≥–∏–µ —É—Å–ª—É–≥–∏')
    keyboard.row('‚¨ÖÔ∏è –ù–∞–∑–∞–¥', '–û—Ç–º–µ–Ω–∞')
    await bot.send_message(chat_id=message.from_user.id,
                           text='–í—ã–±–µ—Ä–∏—Ç–µ –≤–∏–¥ —É—Å–ª—É–≥–∏, –∫–æ—Ç–æ—Ä—É—é —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∏—Ç—å',
                           reply_markup=keyboard)
    await Create.services.set()

@dp.message_handler(text='–û—Ç–º–µ–Ω–∞', state=Create.date_time)
async def services(message: types.Message, state: FSMContext):
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.row('‚ù§Ô∏è–ò–∑–±—Ä–∞–Ω–Ω–æ–µ', 'üìù –°–æ–∑–¥–∞—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ —É—Å–ª—É–≥—É')
    keyboard.row('üèÖ –ù–∞–π—Ç–∏ –º–∞—Å—Ç–µ—Ä–∞ –ø–æ —Ä–µ–π—Ç–∏–Ω–≥—É', 'üí¨ –ö–∞–Ω–∞–ª/–ß–∞—Ç')
    keyboard.row('üí∞ –ö–æ—à–µ–ª–µ–∫', 'üìÇ –ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å')
    keyboard.row('‚ÑπÔ∏è–ö–∞–∫ —Ä–∞–±–æ—Ç–∞—Ç—å —Å –±–æ—Ç–æ–º')
    await bot.send_message(chat_id=message.from_user.id,
                           text='–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –º–µ–Ω—é',
                           reply_markup=keyboard)
    await state.finish()


@dp.message_handler(state=Create.date_time)
async def date_time(message: types.Message, state: FSMContext):
    date_time = message.text
    await state.update_data(date_time=date_time)
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.row('‚¨ÖÔ∏è –ù–∞–∑–∞–¥', '–û—Ç–º–µ–Ω–∞')
    await bot.send_message(chat_id=message.from_user.id,
                           text='–í—ã —É—Å–ø–µ—à–Ω–æ –≤–≤–µ–ª–∏ –∂–µ–ª–∞–π–º–æ–µ –≤—Ä–µ–º—è\n'
                                '–û–ø–∏—à–∏—Ç–µ —É—Å–ª—É–≥—É, –∫–æ—Ç–æ—Ä—É—é —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∏—Ç—å',
                           reply_markup=keyboard)
    await Create.description.set()


@dp.message_handler(text='‚¨ÖÔ∏è –ù–∞–∑–∞–¥', state=Create.description)
async def services(message: types.Message, state: FSMContext):
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.row('‚¨ÖÔ∏è –ù–∞–∑–∞–¥', '–û—Ç–º–µ–Ω–∞')
    await bot.send_message(chat_id=message.from_user.id,
                           text='–í–≤–µ–¥–∏—Ç–µ –∂–µ–ª–∞–µ–º—É—é –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è –æ–∫–∞–∑–∞–Ω–∏—è —É—Å–ª—É–≥–∏',
                           reply_markup=keyboard)
    await Create.date_time.set()

@dp.message_handler(text='–û—Ç–º–µ–Ω–∞', state=Create.description)
async def services(message: types.Message, state: FSMContext):
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.row('‚ù§Ô∏è–ò–∑–±—Ä–∞–Ω–Ω–æ–µ', 'üìù –°–æ–∑–¥–∞—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ —É—Å–ª—É–≥—É')
    keyboard.row('üèÖ –ù–∞–π—Ç–∏ –º–∞—Å—Ç–µ—Ä–∞ –ø–æ —Ä–µ–π—Ç–∏–Ω–≥—É', 'üí¨ –ö–∞–Ω–∞–ª/–ß–∞—Ç')
    keyboard.row('üí∞ –ö–æ—à–µ–ª–µ–∫', 'üìÇ –ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å')
    keyboard.row('‚ÑπÔ∏è–ö–∞–∫ —Ä–∞–±–æ—Ç–∞—Ç—å —Å –±–æ—Ç–æ–º')
    await bot.send_message(chat_id=message.from_user.id,
                           text='–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –º–µ–Ω—é',
                           reply_markup=keyboard)
    await state.finish()


@dp.message_handler(state=Create.description)
async def description(message: types.Message, state: FSMContext):
    description = message.text
    await state.update_data(description=description)
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.row('‚è© –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å')
    keyboard.row('–û—Ç–º–µ–Ω–∞')
    await bot.send_message(chat_id=message.from_user.id,
                           text='–í—ã —É—Å–ø–µ—à–Ω–æ –≤–≤–µ–ª–∏ –æ–ø–∏—Å–∞–Ω–∏–µ —É—Å–ª—É–≥–∏\n'
                                '–ü—Ä–∏–∫—Ä–∏–ø–∏—Ç–µ —Ñ–æ—Ç–æ –¥–ª—è –ø—Ä–∏–º–µ—Ä–∞',
                           reply_markup=keyboard)
    await Create.photo.set()


@dp.message_handler(text='–û—Ç–º–µ–Ω–∞', state=Create.photo)
async def services(message: types.Message, state: FSMContext):
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.row('‚ù§Ô∏è–ò–∑–±—Ä–∞–Ω–Ω–æ–µ', 'üìù –°–æ–∑–¥–∞—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ —É—Å–ª—É–≥—É')
    keyboard.row('üèÖ –ù–∞–π—Ç–∏ –º–∞—Å—Ç–µ—Ä–∞ –ø–æ —Ä–µ–π—Ç–∏–Ω–≥—É', 'üí¨ –ö–∞–Ω–∞–ª/–ß–∞—Ç')
    keyboard.row('üí∞ –ö–æ—à–µ–ª–µ–∫', 'üìÇ –ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å')
    keyboard.row('‚ÑπÔ∏è–ö–∞–∫ —Ä–∞–±–æ—Ç–∞—Ç—å —Å –±–æ—Ç–æ–º')
    await bot.send_message(chat_id=message.from_user.id,
                           text='–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –º–µ–Ω—é –∑–∞—è–≤–æ–∫',
                           reply_markup=keyboard)
    await state.finish()


@dp.message_handler(content_types=types.ContentType.PHOTO, state=Create.photo)
async def photo(message: types.Message, state: FSMContext):
    await message.photo[-1].download()
    photo_id = message.photo[-1].file_id
    data = await state.get_data()
    city = data.get("city")
    metro = data.get("metro")
    service = data.get("service")
    date_time = data.get("date_time")
    description = data.get("description")
    name = message.from_user.id
    await postgres.add_applications(user_id=message.from_user.id, city=city, metro=metro, service=service,
                                    date_time=date_time, description=description, photo=photo_id, name=name)
    number = await postgres.select_number_applications(user_id=message.from_user.id)
    # photo = await postgres.select_photo(user_id=message.from_user.id)
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.row('‚ù§Ô∏è–ò–∑–±—Ä–∞–Ω–Ω–æ–µ', 'üìù –°–æ–∑–¥–∞—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ —É—Å–ª—É–≥—É')
    keyboard.row('üèÖ –ù–∞–π—Ç–∏ –º–∞—Å—Ç–µ—Ä–∞ –ø–æ —Ä–µ–π—Ç–∏–Ω–≥—É', 'üí¨ –ö–∞–Ω–∞–ª/–ß–∞—Ç')
    keyboard.row('üí∞ –ö–æ—à–µ–ª–µ–∫', 'üìÇ –ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å')
    keyboard.row('‚ÑπÔ∏è–ö–∞–∫ —Ä–∞–±–æ—Ç–∞—Ç—å —Å –±–æ—Ç–æ–º')

    await bot.send_photo(chat_id=message.from_user.id, photo=photo_id,
                         caption=f"‚ùóÔ∏è–ù–æ–º–µ—Ä –∑–∞—è–≤–∫–∏: #a{number[0]['max']}\n\n"
                                 f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: <a href='tg://user?id={message.from_user.id}'><b>{message.from_user.full_name}</b></a>\n\n"
                                 f"üíÖ –£—Å–ª—É–≥–∞: {service}\n\n"
                                 f"üèô –ì–æ—Ä–æ–¥: {city}\n"
                                 f"üöá –ú–µ—Ç—Ä–æ: {metro}\n\n"
                                 f"üïê –ñ–µ–ª–∞–µ–º–∞—è –¥–∞—Ç–∞: {date_time}\n\n"
                                 f"üóí –û–ø–∏—Å–∞–Ω–∏–µ –∑–∞—è–≤–∫–∏: {description}", reply_markup=keyboard)

    await bot.send_photo(chat_id="@poisk_mastera", photo=photo_id,
                         caption=f"#a{number[0]['max']}\n\n"
                                 f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: <a href='tg://user?id={message.from_user.id}'><b>{message.from_user.full_name}</b></a>\n\n"
                                 f"üíÖ –£—Å–ª—É–≥–∞: {service}\n\n"
                                 f"üèô –ì–æ—Ä–æ–¥: {city}\n"
                                 f"üöá –ú–µ—Ç—Ä–æ: {metro}\n\n"
                                 f"üïê –ñ–µ–ª–∞–µ–º–∞—è –¥–∞—Ç–∞: {date_time}\n\n"
                                 f"üóí –û–ø–∏—Å–∞–Ω–∏–µ –∑–∞—è–≤–∫–∏: {description}")
    await state.finish()


@dp.message_handler(text='‚è© –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å', state=Create.photo)
async def photo(message: types.Message, state: FSMContext):
    data = await state.get_data()
    city = data.get("city")
    metro = data.get("metro")
    service = data.get("service")
    date_time = data.get("date_time")
    description = data.get("description")
    name = message.from_user.full_name
    await postgres.add_applications(user_id=message.from_user.id, city=city, metro=metro, service=service,
                                    date_time=date_time, description=description, photo='–ü—É—Å—Ç–æ', name=name)
    number = await postgres.select_number_applications(user_id=message.from_user.id)
    # photo = await postgres.select_photo(user_id=message.from_user.id)
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.row('‚ù§Ô∏è–ò–∑–±—Ä–∞–Ω–Ω–æ–µ', 'üìù –°–æ–∑–¥–∞—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ —É—Å–ª—É–≥—É')
    keyboard.row('üèÖ –ù–∞–π—Ç–∏ –º–∞—Å—Ç–µ—Ä–∞ –ø–æ —Ä–µ–π—Ç–∏–Ω–≥—É', 'üí¨ –ö–∞–Ω–∞–ª/–ß–∞—Ç')
    keyboard.row('üí∞ –ö–æ—à–µ–ª–µ–∫', 'üìÇ –ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å')
    keyboard.row('‚ÑπÔ∏è–ö–∞–∫ —Ä–∞–±–æ—Ç–∞—Ç—å —Å –±–æ—Ç–æ–º')

    await bot.send_message(chat_id=message.from_user.id,
                           text=f"‚ùóÔ∏è–ù–æ–º–µ—Ä –∑–∞—è–≤–∫–∏: #–∑{number[0]['max']}\n\n"
                                f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: <a href='tg://user?id={message.from_user.id}'><b>{message.from_user.full_name}</b></a>\n\n"
                                f"üíÖ –£—Å–ª—É–≥–∞: {service}\n\n"
                                f"üèô –ì–æ—Ä–æ–¥: {city}\n"
                                f"üöá –ú–µ—Ç—Ä–æ: {metro}\n\n"
                                f"üïê –ñ–µ–ª–∞–µ–º–∞—è –¥–∞—Ç–∞: {date_time}\n\n"
                                f"üóí –û–ø–∏—Å–∞–Ω–∏–µ –∑–∞—è–≤–∫–∏: {description}", reply_markup=keyboard)

    await bot.send_message(chat_id="@poisk_mastera",
                           text=f"#–∑{number[0]['max']}\n\n"
                                f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: <a href='tg://user?id={message.from_user.id}'><b>{message.from_user.full_name}</b></a>\n\n"
                                f"üíÖ –£—Å–ª—É–≥–∞: {service}\n\n"
                                f"üèô –ì–æ—Ä–æ–¥: {city}\n"
                                f"üöá –ú–µ—Ç—Ä–æ: {metro}\n\n"
                                f"üïê –ñ–µ–ª–∞–µ–º–∞—è –¥–∞—Ç–∞: {date_time}\n\n"
                                f"üóí –û–ø–∏—Å–∞–Ω–∏–µ –∑–∞—è–≤–∫–∏: {description}")
    await state.finish()
