from aiogram import types
from aiogram.dispatcher import FSMContext

from data.prolong_sub import prolong_sub
from filters import CheckUsers
from loader import dp, bot
from states.state_users import Question, Answer


@dp.message_handler(CheckUsers(), text='‚ÑπÔ∏è–ö–∞–∫ —Ä–∞–±–æ—Ç–∞—Ç—å —Å –±–æ—Ç–æ–º')
async def bot_start(message: types.Message):
    await prolong_sub(user_id=message.from_user.id)
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.row('üìú –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è', '‚ùì –í–æ–ø—Ä–æ—Å/–û—Ç–≤–µ—Ç')
    keyboard.row('‚¨ÖÔ∏è –Ω–∞–∑–∞–¥')
    await bot.send_message(chat_id=message.from_user.id,
                           text='–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å. –ë–æ—Ç —Å–æ–∑–¥–∞–Ω –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã —Å–≤–æ–¥–∏—Ç—å –º–∞—Å—Ç–µ—Ä–æ–≤ –∏ –∫–ª–∏–µ–Ω—Ç–æ–≤',
                           reply_markup=keyboard)


@dp.message_handler(CheckUsers(), text='üìú –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è')
async def bot_start(message: types.Message):
    await prolong_sub(user_id=message.from_user.id)
    keyboard = types.InlineKeyboardMarkup()
    keyboard.add(types.InlineKeyboardButton(text='–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å', url="https://t.me/testchannalmy"),
                 types.InlineKeyboardButton(text='–ü—Ä–æ—á–∏—Ç–∞—Ç—å', url="https://t.me/testchannalmy"))
    await bot.send_message(chat_id=message.from_user.id,
                           text='–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞–∫ –≤–∞–º —É–¥–æ–±–Ω–µ–µ –∏–∑—É—á–∏—Ç—å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –ø–æ —Ä–∞–±–æ—Ç–µ —Å –±–æ—Ç–æ–º',
                           reply_markup=keyboard)


@dp.message_handler(CheckUsers(), text='‚ùì –í–æ–ø—Ä–æ—Å/–û—Ç–≤–µ—Ç', state=None)
async def feedback_user(message: types.Message):
    await prolong_sub(user_id=message.from_user.id)
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.row('‚¨ÖÔ∏è –Ω–∞–∑–∞–¥')
    await message.answer(text=f'–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å', reply_markup=keyboard)

    await Question.question.set()


@dp.message_handler(text='‚¨ÖÔ∏è –Ω–∞–∑–∞–¥', state=Question.question)
async def channel(message: types.Message, state: FSMContext):
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.row('‚ù§Ô∏è–ò–∑–±—Ä–∞–Ω–Ω–æ–µ', 'üìù –°–æ–∑–¥–∞—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ —É—Å–ª—É–≥—É')
    keyboard.row('üèÖ –ù–∞–π—Ç–∏ –º–∞—Å—Ç–µ—Ä–∞ –ø–æ —Ä–µ–π—Ç–∏–Ω–≥—É', 'üí¨ –ö–∞–Ω–∞–ª/–ß–∞—Ç')
    keyboard.row('üí∞ –ö–æ—à–µ–ª–µ–∫', 'üìÇ –ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å')
    keyboard.row('‚ÑπÔ∏è–ö–∞–∫ —Ä–∞–±–æ—Ç–∞—Ç—å —Å –±–æ—Ç–æ–º')

    await bot.send_message(chat_id=message.from_user.id,
                           text='–í—ã –æ—Ç–º–µ–Ω–∏–ª–∏ –≤–æ–ø—Ä–æ—Å',
                           reply_markup=keyboard)

    await state.finish()


@dp.message_handler(state=Question.question)
async def answer_user(message: types.Message, state: FSMContext):
    user_message = message.text
    keyboard = types.InlineKeyboardMarkup()
    keyboard.add(types.InlineKeyboardButton(text='–ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–∏—Ç—å –≤ –±–æ—Ç–∞', callback_data=f"answer:{message.from_user.id}"))

    await bot.send_message(chat_id=-1001348703754,
                           text=f'–£ –≤–∞—Å –Ω–æ–≤—ã–π –≤–æ–ø—Ä–æ—Å –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {message.from_user.full_name}\n'
                                f'id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {message.from_user.id}\n'
                                f'–í–æ–ø—Ä–æ—Å: {user_message}',
                           reply_markup=keyboard)

    keyboard2 = types.ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard2.row('‚ù§Ô∏è–ò–∑–±—Ä–∞–Ω–Ω–æ–µ', 'üìù –°–æ–∑–¥–∞—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ —É—Å–ª—É–≥—É')
    keyboard2.row('üèÖ –ù–∞–π—Ç–∏ –º–∞—Å—Ç–µ—Ä–∞ –ø–æ —Ä–µ–π—Ç–∏–Ω–≥—É', 'üí¨ –ö–∞–Ω–∞–ª/–ß–∞—Ç')
    keyboard2.row('üí∞ –ö–æ—à–µ–ª–µ–∫', 'üìÇ –ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å')
    keyboard2.row('‚ÑπÔ∏è–ö–∞–∫ —Ä–∞–±–æ—Ç–∞—Ç—å —Å –±–æ—Ç–æ–º')

    await message.answer(text=f'–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –±–æ—Ç–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤–∞—à –≤–æ–ø—Ä–æ—Å\n'
                              f'–û–Ω –ø–æ—Å—Ç–∞—Ä–∞–µ—Ç—Å—è –æ—Ç–≤–µ—Ç–∏—Ç—å –∫–∞–∫ –º–æ–∂–Ω–æ –±—ã—Å—Ç—Ä–µ–µ',
                         reply_markup=keyboard2)
    await state.finish()


@dp.callback_query_handler(text_contains="answer")
async def cancel_payment(call: types.CallbackQuery, state: FSMContext):
    user_id = call.data.split(":")[-1]
    user_id = int(user_id)
    keyboard = types.InlineKeyboardMarkup()
    keyboard.add(types.InlineKeyboardButton(text='–û—Ç–≤–µ—Ç–∏—Ç—å', callback_data=f"user:{user_id}"))

    keyboard2 = types.InlineKeyboardMarkup()
    keyboard2.add(types.InlineKeyboardButton(text='–ü–µ—Ä–µ–π—Ç–∏ –≤ –±–æ—Ç–∞', url=f"https://t.me/PoiskMasteraBot"))
    await call.message.edit_reply_markup(reply_markup=keyboard2)
    await bot.send_message(chat_id=call.from_user.id,
                           text='–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É, —á—Ç–æ–±—ã –æ—Ç–≤–µ—Ç–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é',
                           reply_markup=keyboard)


@dp.callback_query_handler(text_contains="user")
async def cancel_payment(call: types.CallbackQuery, state: FSMContext):
    user_id = call.data.split(":")[-1]
    user_id = int(user_id)
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.row('‚¨ÖÔ∏è –Ω–∞–∑–∞–¥')
    await state.update_data(user_id=user_id)
    await bot.send_message(chat_id=call.from_user.id,
                           text='–í–≤–µ–¥–∏—Ç–µ –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é',
                           reply_markup=keyboard)
    await Answer.answer2.set()


@dp.message_handler(text='‚¨ÖÔ∏è –Ω–∞–∑–∞–¥', state=Answer.answer2)
async def channel(message: types.Message, state: FSMContext):
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.row('‚ù§Ô∏è–ò–∑–±—Ä–∞–Ω–Ω–æ–µ', 'üìù –°–æ–∑–¥–∞—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ —É—Å–ª—É–≥—É')
    keyboard.row('üèÖ –ù–∞–π—Ç–∏ –º–∞—Å—Ç–µ—Ä–∞ –ø–æ —Ä–µ–π—Ç–∏–Ω–≥—É', 'üí¨ –ö–∞–Ω–∞–ª/–ß–∞—Ç')
    keyboard.row('üí∞ –ö–æ—à–µ–ª–µ–∫', 'üìÇ –ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å')
    keyboard.row('‚ÑπÔ∏è–ö–∞–∫ —Ä–∞–±–æ—Ç–∞—Ç—å —Å –±–æ—Ç–æ–º')

    await bot.send_message(chat_id=message.from_user.id,
                           text='–í—ã –æ—Ç–º–µ–Ω–∏–ª–∏ –æ—Ç–≤–µ—Ç',
                           reply_markup=keyboard)

    await state.finish()


@dp.message_handler(state=Answer.answer2)
async def answer_user(message: types.Message, state: FSMContext):
    answer = message.text
    data = await state.get_data()
    user_id = data.get("user_id")
    await bot.send_message(chat_id=user_id,
                           text=f'–í–∞–º –æ—Ç–≤–µ—Ç–∏–ª –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: {message.from_user.full_name}\n'
                                f'–û—Ç–≤–µ—Ç: {answer}')
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.row('‚ù§Ô∏è–ò–∑–±—Ä–∞–Ω–Ω–æ–µ', 'üìù –°–æ–∑–¥–∞—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ —É—Å–ª—É–≥—É')
    keyboard.row('üèÖ –ù–∞–π—Ç–∏ –º–∞—Å—Ç–µ—Ä–∞ –ø–æ —Ä–µ–π—Ç–∏–Ω–≥—É', 'üí¨ –ö–∞–Ω–∞–ª/–ß–∞—Ç')
    keyboard.row('üí∞ –ö–æ—à–µ–ª–µ–∫', 'üìÇ –ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å')
    keyboard.row('‚ÑπÔ∏è–ö–∞–∫ —Ä–∞–±–æ—Ç–∞—Ç—å —Å –±–æ—Ç–æ–º')
    await message.answer(text=f'–°–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É–º–ø–µ—à–Ω–æ\n',
                         reply_markup=keyboard)
    await state.finish()
