from aiogram import types
from aiogram.dispatcher import FSMContext

from data.prolong_sub import prolong_sub
from filters import CheckUsers
from loader import dp, bot
from states.state_users import Echo


@dp.message_handler(CheckUsers())
async def echo(message: types.Message):
    await prolong_sub(user_id=message.from_user.id)
    user_message = message.text
    keyboard = types.InlineKeyboardMarkup()
    keyboard.add(
        types.InlineKeyboardButton(text='–ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–∏—Ç—å –≤ –±–æ—Ç–∞', callback_data=f"echo:{message.from_user.id}"))
    await bot.send_message(chat_id='@testchannalmy',
                           text=f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {message.from_user.full_name}\n'
                                f'–ü–∏—à–µ—Ç –≤ –±–æ—Ç–∞ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É—è –∫–æ–º–∞–Ω–¥—ã: {user_message}',
                           reply_markup=keyboard)
    await bot.send_message(chat_id=message.from_user.id,
                           text='–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ')


@dp.callback_query_handler(text_contains="echo")
async def cancel_payment(call: types.CallbackQuery,):
    user_id = call.data.split(":")[-1]
    user_id = int(user_id)
    keyboard = types.InlineKeyboardMarkup()
    keyboard.add(types.InlineKeyboardButton(text='–û—Ç–≤–µ—Ç–∏—Ç—å', callback_data=f"info:{user_id}"))

    keyboard2 = types.InlineKeyboardMarkup()
    keyboard2.add(types.InlineKeyboardButton(text='–ü–µ—Ä–µ–π—Ç–∏ –≤ –±–æ—Ç–∞', url=f"https://t.me/hheellooworld_bot"))
    await call.message.edit_reply_markup(reply_markup=keyboard2)
    await bot.send_message(chat_id=call.from_user.id,
                           text='–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É, —á—Ç–æ–±—ã –æ—Ç–≤–µ—Ç–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é',
                           reply_markup=keyboard)


@dp.callback_query_handler(text_contains="info")
async def cancel_payment(call: types.CallbackQuery, state: FSMContext):
    user_id = call.data.split(":")[-1]
    user_id = int(user_id)
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.row('‚¨ÖÔ∏è –Ω–∞–∑–∞–¥')
    await state.update_data(user_id=user_id)
    await bot.send_message(chat_id=call.from_user.id,
                           text='–í–≤–µ–¥–∏—Ç–µ –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é',
                           reply_markup=keyboard)
    await Echo.echo.set()


@dp.message_handler(text='‚¨ÖÔ∏è –Ω–∞–∑–∞–¥', state=Echo.echo)
async def channel(message: types.Message, state: FSMContext):
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.row('‚ù§Ô∏è–ò–∑–±—Ä–∞–Ω–Ω–æ–µ', 'üìù –°–æ–∑–¥–∞—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ —É—Å–ª—É–≥—É')
    keyboard.row('üèÖ –ù–∞–π—Ç–∏ –º–∞—Å—Ç–µ—Ä–∞ –ø–æ —Ä–µ–π—Ç–∏–Ω–≥—É', 'üí¨ –ö–∞–Ω–∞–ª/–ß–∞—Ç')
    keyboard.row('üí∞ –ö–æ—à–µ–ª–µ–∫', 'üìÇ –ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å')
    keyboard.row('‚ÑπÔ∏è–ö–∞–∫ —Ä–∞–±–æ—Ç–∞—Ç—å —Å –±–æ—Ç–æ–º')

    await bot.send_message(chat_id=message.from_user.id,
                           text='–í—ã –æ—Ç–º–µ–Ω–∏–ª–∏ –æ—Ç–≤–µ—Ç',
                           reply_markup=keyboard)

    await state.finish()


@dp.message_handler(state=Echo.echo)
async def answer_user(message: types.Message, state: FSMContext):
    answer = message.text
    data = await state.get_data()
    user_id = data.get("user_id")
    await bot.send_message(chat_id=user_id,
                           text=f'–í–∞–º –Ω–∞–ø–∏—Å–∞–ª –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: {message.from_user.full_name}\n'
                                f'–û—Ç–≤–µ—Ç: {answer}')
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.row('‚ù§Ô∏è–ò–∑–±—Ä–∞–Ω–Ω–æ–µ', 'üìù –°–æ–∑–¥–∞—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ —É—Å–ª—É–≥—É')
    keyboard.row('üèÖ –ù–∞–π—Ç–∏ –º–∞—Å—Ç–µ—Ä–∞ –ø–æ —Ä–µ–π—Ç–∏–Ω–≥—É', 'üí¨ –ö–∞–Ω–∞–ª/–ß–∞—Ç')
    keyboard.row('üí∞ –ö–æ—à–µ–ª–µ–∫', 'üìÇ –ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å')
    keyboard.row('‚ÑπÔ∏è–ö–∞–∫ —Ä–∞–±–æ—Ç–∞—Ç—å —Å –±–æ—Ç–æ–º')
    await message.answer(text=f'–°–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É–º–ø–µ—à–Ω–æ\n',
                         reply_markup=keyboard)
    await state.finish()