from aiogram import types
from aiogram.dispatcher import FSMContext
from aiogram.utils.markdown import hlink, hcode

from loader import dp, bot
from states.state_users import Donate
from utils.db_api import postgres
from utils.misc.qiwi import NoPaymentFound, NotEnoughMoney, Payment_donate


@dp.callback_query_handler(text='donation')
async def sub(call: types.CallbackQuery):
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.row('‚¨ÖÔ∏è –Ω–∞–∑–∞–¥')
    await bot.send_message(chat_id=call.from_user.id,
                           text='–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –Ω–∞ –∫–æ—Ç–æ—Ä—É—é —Ö–æ—Ç–∏—Ç–µ –ø–æ–ø–æ–ª–Ω–∏—Ç—å –∫–æ—à–µ–ª–µ–∫',
                           reply_markup=keyboard)
    await Donate.sum.set()


@dp.message_handler(text='‚¨ÖÔ∏è –Ω–∞–∑–∞–¥', state=Donate.sum)
async def channel(message: types.Message, state: FSMContext):
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.row('‚ù§Ô∏è–ò–∑–±—Ä–∞–Ω–Ω–æ–µ', 'üìù –°–æ–∑–¥–∞—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ —É—Å–ª—É–≥—É')
    keyboard.row('üèÖ –ù–∞–π—Ç–∏ –º–∞—Å—Ç–µ—Ä–∞ –ø–æ —Ä–µ–π—Ç–∏–Ω–≥—É', 'üí¨ –ö–∞–Ω–∞–ª/–ß–∞—Ç')
    keyboard.row('üí∞ –ö–æ—à–µ–ª–µ–∫', 'üìÇ –ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å')
    keyboard.row('‚ÑπÔ∏è–ö–∞–∫ —Ä–∞–±–æ—Ç–∞—Ç—å —Å –±–æ—Ç–æ–º')
    await bot.send_message(chat_id=message.from_user.id,
                           text='–í—ã –æ—Ç–º–µ–Ω–∏–ª–∏ –ø–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏–µ',
                           reply_markup=keyboard)
    await state.finish()


@dp.message_handler(state=Donate.sum)
async def sum(message: types.Message, state: FSMContext):
    try:
        amount = int(message.text)
        payment = Payment_donate(amount=amount)
        payment.create()

        paid_keyboard = types.InlineKeyboardMarkup()
        paid_keyboard.add(types.KeyboardButton(text='–û–ø–ª–∞—Ç–∏—Ç—å', url=payment.invoice))
        paid_keyboard.add(types.KeyboardButton(text='–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–Ω—É—é –æ–ø–ª–∞—Ç—É', callback_data="paid"))
        paid_keyboard.add(types.KeyboardButton(text='–û—Ç–º–µ–Ω–∞', callback_data="cancel"))

        await message.answer(
            "\n".join([
                f"–û–ø–ª–∞—Ç–∏—Ç–µ –Ω–µ –º–µ–Ω—å—à–µ {amount:.2f} –ø–æ –Ω–æ–º–µ—Ä—É —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∏–ª–∏ –ø–æ –∞–¥—Ä–µ—Å—É",
                "",
                hlink(title='–ù–∞–∂–º–∏ –Ω–∞ –º–µ–Ω—è —á—Ç–æ–±—ã –æ–ø–ª–∞—Ç–∏—Ç—å\n', url=payment.invoice),
                "–ò –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —É–∫–∞–∂–∏—Ç–µ ID –ø–ª–∞—Ç–µ–∂–∞",
                hcode(payment.id)
            ]),
            reply_markup=paid_keyboard
        )
        await Donate.qiwi.set()
        await state.update_data(amount=payment.amount)
        await state.update_data(id=payment.id)
    except ValueError:
        await bot.send_message(chat_id=message.from_user.id,
                               text='–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ')
        await Donate.sum.set()


@dp.message_handler(text='‚¨ÖÔ∏è –Ω–∞–∑–∞–¥', state=Donate.qiwi)
async def channel(message: types.Message, state: FSMContext):
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.row('‚ù§Ô∏è–ò–∑–±—Ä–∞–Ω–Ω–æ–µ', 'üìù –°–æ–∑–¥–∞—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ —É—Å–ª—É–≥—É')
    keyboard.row('üèÖ –ù–∞–π—Ç–∏ –º–∞—Å—Ç–µ—Ä–∞ –ø–æ —Ä–µ–π—Ç–∏–Ω–≥—É', 'üí¨ –ö–∞–Ω–∞–ª/–ß–∞—Ç')
    keyboard.row('üí∞ –ö–æ—à–µ–ª–µ–∫', 'üìÇ –ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å')
    keyboard.row('‚ÑπÔ∏è–ö–∞–∫ —Ä–∞–±–æ—Ç–∞—Ç—å —Å –±–æ—Ç–æ–º')
    await bot.send_message(chat_id=message.from_user.id,
                           text='–í—ã –æ—Ç–º–µ–Ω–∏–ª–∏ –ø–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏–µ',
                           reply_markup=keyboard)
    await state.finish()


@dp.callback_query_handler(text="cancel", state=Donate.qiwi)
async def cancel_payment(call: types.CallbackQuery, state: FSMContext):
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.row('‚ù§Ô∏è–ò–∑–±—Ä–∞–Ω–Ω–æ–µ', 'üìù –°–æ–∑–¥–∞—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ —É—Å–ª—É–≥—É')
    keyboard.row('üèÖ –ù–∞–π—Ç–∏ –º–∞—Å—Ç–µ—Ä–∞ –ø–æ —Ä–µ–π—Ç–∏–Ω–≥—É', 'üí¨ –ö–∞–Ω–∞–ª/–ß–∞—Ç')
    keyboard.row('üí∞ –ö–æ—à–µ–ª–µ–∫', 'üìÇ –ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å')
    keyboard.row('‚ÑπÔ∏è–ö–∞–∫ —Ä–∞–±–æ—Ç–∞—Ç—å —Å –±–æ—Ç–æ–º')
    await call.message.edit_reply_markup()
    await bot.send_message(chat_id=call.from_user.id,
                           text='–í—ã –æ—Ç–º–µ–Ω–∏–ª–∏ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ—à–µ–ª—å–∫–∞',
                           reply_markup=keyboard)
    await state.finish()


@dp.callback_query_handler(text="paid", state=Donate.qiwi)
async def approve_payment(call: types.CallbackQuery, state: FSMContext):
    data = await state.get_data()
    amount = data.get("amount")
    id = data.get("id")
    payment = Payment_donate(amount=amount, id=id)
    try:
        payment.check_payment()
    except NoPaymentFound:
        await call.message.answer("–¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")
        return
    except NotEnoughMoney:
        await call.message.answer("–û–ø–ª–∞—á–µ–Ω–Ω–∞—è —Å—É–º–∞ –º–µ–Ω—å—à–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–π.")
        return

    else:
        user_id = call.from_user.id
        pay_id = data.get("id")
        keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
        keyboard.row('–û–ö')

        await postgres.update_donate(user_id=user_id, pay_id=pay_id)
        await call.message.answer("–£—Å–ø–µ—à–Ω–æ –æ–ø–ª–∞—á–µ–Ω–æ", reply_markup=keyboard)

    await Donate.ok.set()


@dp.message_handler(text='–û–ö', state=Donate.ok)
async def channel(message: types.Message, state: FSMContext):
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.row('‚ù§Ô∏è–ò–∑–±—Ä–∞–Ω–Ω–æ–µ', 'üìù –°–æ–∑–¥–∞—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ —É—Å–ª—É–≥—É')
    keyboard.row('üèÖ –ù–∞–π—Ç–∏ –º–∞—Å—Ç–µ—Ä–∞ –ø–æ —Ä–µ–π—Ç–∏–Ω–≥—É', 'üí¨ –ö–∞–Ω–∞–ª/–ß–∞—Ç')
    keyboard.row('üí∞ –ö–æ—à–µ–ª–µ–∫', 'üìÇ –ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å')
    keyboard.row('‚ÑπÔ∏è–ö–∞–∫ —Ä–∞–±–æ—Ç–∞—Ç—å —Å –±–æ—Ç–æ–º')
    await bot.send_message(chat_id=message.from_user.id,
                           text='–°–ø–∞—Å–∏–±–æ –∑–∞ –¥–æ–Ω–∞—Ç ‚ù§Ô∏è',
                           reply_markup=keyboard)
    await state.finish()



