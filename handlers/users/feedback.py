from aiogram import types
from aiogram.dispatcher import FSMContext
from aiogram.types import InlineKeyboardButton

from loader import dp, bot
from states.state_users import Feedback_master
from utils.db_api import postgres


@dp.callback_query_handler(text_contains='feedback_master')
async def feedback(call: types.CallbackQuery, state: FSMContext):
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.row('–û—Ç–º–µ–Ω–∞')
    await bot.send_message(chat_id=call.from_user.id, text=f"–í–≤–µ–¥–∏—Ç–µ ID –º–∞—Å—Ç–µ—Ä–∞:\n"
                                                           f"–ù–∞–ø—Ä–∏–º–µ—Ä: ID:1", reply_markup=keyboard)
    await Feedback_master.master.set()


@dp.message_handler(text='–û—Ç–º–µ–Ω–∞', state=Feedback_master.master)
async def feedback(call: types.CallbackQuery, state: FSMContext):
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.row('‚ù§Ô∏è–ò–∑–±—Ä–∞–Ω–Ω–æ–µ', 'üìù –°–æ–∑–¥–∞—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ —É—Å–ª—É–≥—É')
    keyboard.row('üèÖ –ù–∞–π—Ç–∏ –º–∞—Å—Ç–µ—Ä–∞ –ø–æ —Ä–µ–π—Ç–∏–Ω–≥—É', 'üí¨ –ö–∞–Ω–∞–ª/–ß–∞—Ç')
    keyboard.row('üí∞ –ö–æ—à–µ–ª–µ–∫', 'üìÇ –ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å')
    keyboard.row('‚ÑπÔ∏è–ö–∞–∫ —Ä–∞–±–æ—Ç–∞—Ç—å —Å –±–æ—Ç–æ–º')
    await bot.send_message(chat_id=call.from_user.id, text=f"–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", reply_markup=keyboard)
    await state.finish()


@dp.message_handler(state=Feedback_master.master)
async def feedback(message: types.Message, state: FSMContext):
    id_user = message.text.split(":")[-1]
    id_user = int(id_user)
    master = await postgres.get_master(user_number=id_user)
    if master != []:
        if master[0]['manicure_pedicure'] and master[0]['hairdresser'] and master[0]['visage'] and master[0]['other_services'] == '–ü—É—Å—Ç–æ':
            keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
            keyboard.row('–û—Ç–º–µ–Ω–∞')
            await bot.send_message(chat_id=message.from_user.id,
                                   text=f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –º–∞—Å—Ç–µ—Ä–æ–º.\n\n"
                                        f"–í–≤–µ–¥–∏—Ç–µ ID –º–∞—Å—Ç–µ—Ä–∞:\n"
                                        f"–ù–∞–ø—Ä–∏–º–µ—Ä: ID:1",
                                   reply_markup=keyboard)
            await Feedback_master.master.set()

        else:
            user_id = int(master[0]['user_id'])
            keyboard = types.InlineKeyboardMarkup(
                inline_keyboard=[
                    [
                        InlineKeyboardButton(text='‚ûñ', callback_data='one_star'),
                        InlineKeyboardButton(text='‚ûñ', callback_data='two_star'),
                        InlineKeyboardButton(text='‚ûñ', callback_data='three_star'),
                        InlineKeyboardButton(text='‚ûñ', callback_data='four_star'),
                        InlineKeyboardButton(text='‚ûñ', callback_data='five_star')
                    ]
                ]
            )
            keyboard2 = types.ReplyKeyboardMarkup(resize_keyboard=True)
            keyboard2.row('–û—Ç–º–µ–Ω–∞')
            await state.update_data(user_id=user_id)
            await bot.send_message(chat_id=message.from_user.id,
                                   text=f"–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –ø–æ–ª—è –æ—Ç–∑—ã–≤–∞ –æ –º–∞—Å—Ç–µ—Ä–µ: {master[0]['name_user']}",
                                   reply_markup=keyboard2)
            await bot.send_message(chat_id=message.from_user.id,
                                   text=f"1/3. –ü–æ—Å—Ç–∞–≤—å—Ç–µ –∑–≤–µ–∑–¥—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é",
                                   reply_markup=keyboard)
            await Feedback_master.star.set()
    else:
        keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
        keyboard.row('–û—Ç–º–µ–Ω–∞')
        await bot.send_message(chat_id=message.from_user.id,
                               text=f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å c —Ç–∞–∫–∏–º ID –Ω–µ—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö, –ª–∏–±–æ –æ–Ω —É–¥–∞–ª–µ–Ω.\n\n"
                                    f"–í–≤–µ–¥–∏—Ç–µ ID –º–∞—Å—Ç–µ—Ä–∞:\n"
                                    f"–ù–∞–ø—Ä–∏–º–µ—Ä: ID:1",
                               reply_markup=keyboard)
        await Feedback_master.master.set()


@dp.message_handler(text='–û—Ç–º–µ–Ω–∞', state=Feedback_master.star)
async def feedback(call: types.CallbackQuery, state: FSMContext):
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.row('‚ù§Ô∏è–ò–∑–±—Ä–∞–Ω–Ω–æ–µ', 'üìù –°–æ–∑–¥–∞—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ —É—Å–ª—É–≥—É')
    keyboard.row('üèÖ –ù–∞–π—Ç–∏ –º–∞—Å—Ç–µ—Ä–∞ –ø–æ —Ä–µ–π—Ç–∏–Ω–≥—É', 'üí¨ –ö–∞–Ω–∞–ª/–ß–∞—Ç')
    keyboard.row('üí∞ –ö–æ—à–µ–ª–µ–∫', 'üìÇ –ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å')
    keyboard.row('‚ÑπÔ∏è–ö–∞–∫ —Ä–∞–±–æ—Ç–∞—Ç—å —Å –±–æ—Ç–æ–º')
    await bot.send_message(chat_id=call.from_user.id, text=f"–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", reply_markup=keyboard)
    await state.finish()


@dp.callback_query_handler(text=['one_star', 'two_star', 'three_star', 'four_star', 'five_star'], state=[Feedback_master.star, Feedback_master.feedback])
async def feedback(call: types.CallbackQuery, state: FSMContext):
    if call.data == 'one_star':
        keyboard = types.InlineKeyboardMarkup(
            inline_keyboard=[
                [
                    InlineKeyboardButton(text='‚≠êÔ∏è', callback_data='one_star'),
                    InlineKeyboardButton(text='‚ûñ', callback_data='two_star'),
                    InlineKeyboardButton(text='‚ûñ', callback_data='three_star'),
                    InlineKeyboardButton(text='‚ûñ', callback_data='four_star'),
                    InlineKeyboardButton(text='‚ûñ', callback_data='five_star')
                ],
                [
                    InlineKeyboardButton(text='–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å', callback_data='—Åonfirm')
                ]
            ]
        )
        star = 1
        await state.update_data(star=star)
        await call.message.edit_text(text='2/3. –ù–∞–∂–º–∏—Ç–µ "–ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å" –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –æ—Ü–µ–Ω–∫–∏')
        await call.message.edit_reply_markup(reply_markup=keyboard)
        await Feedback_master.feedback.set()

    elif call.data == 'two_star':
        keyboard = types.InlineKeyboardMarkup(
            inline_keyboard=[
                [
                    InlineKeyboardButton(text='‚≠êÔ∏è', callback_data='one_star'),
                    InlineKeyboardButton(text='‚≠êÔ∏è', callback_data='two_star'),
                    InlineKeyboardButton(text='‚ûñ', callback_data='three_star'),
                    InlineKeyboardButton(text='‚ûñ', callback_data='four_star'),
                    InlineKeyboardButton(text='‚ûñ', callback_data='five_star')
                ],
                [
                    InlineKeyboardButton(text='–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å', callback_data='—Åonfirm')
                ]
            ]
        )
        star = 2
        await state.update_data(star=star)
        await call.message.edit_text(text='2/3. –ù–∞–∂–º–∏—Ç–µ "–ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å" –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –æ—Ü–µ–Ω–∫–∏')
        await call.message.edit_reply_markup(reply_markup=keyboard)
        await Feedback_master.feedback.set()

    elif call.data == 'three_star':
        keyboard = types.InlineKeyboardMarkup(
            inline_keyboard=[
                [
                    InlineKeyboardButton(text='‚≠êÔ∏è', callback_data='one_star'),
                    InlineKeyboardButton(text='‚≠êÔ∏è', callback_data='two_star'),
                    InlineKeyboardButton(text='‚≠êÔ∏è', callback_data='three_star'),
                    InlineKeyboardButton(text='‚ûñ', callback_data='four_star'),
                    InlineKeyboardButton(text='‚ûñ', callback_data='five_star')
                ],
                [
                    InlineKeyboardButton(text='–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å', callback_data='—Åonfirm')
                ]
            ]
        )
        star = 3
        await state.update_data(star=star)
        await call.message.edit_text(text='2/3. –ù–∞–∂–º–∏—Ç–µ "–ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å" –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –æ—Ü–µ–Ω–∫–∏')
        await call.message.edit_reply_markup(reply_markup=keyboard)
        await Feedback_master.feedback.set()

    elif call.data == 'four_star':
        keyboard = types.InlineKeyboardMarkup(
            inline_keyboard=[
                [
                    InlineKeyboardButton(text='‚≠êÔ∏è', callback_data='one_star'),
                    InlineKeyboardButton(text='‚≠êÔ∏è', callback_data='two_star'),
                    InlineKeyboardButton(text='‚≠êÔ∏è', callback_data='three_star'),
                    InlineKeyboardButton(text='‚≠êÔ∏è', callback_data='four_star'),
                    InlineKeyboardButton(text='‚ûñ', callback_data='five_star')
                ],
                [
                    InlineKeyboardButton(text='–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å', callback_data='—Åonfirm')
                ]
            ]
        )
        star = 4
        await state.update_data(star=star)
        await call.message.edit_text(text='2/3. –ù–∞–∂–º–∏—Ç–µ "–ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å" –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –æ—Ü–µ–Ω–∫–∏')
        await call.message.edit_reply_markup(reply_markup=keyboard)
        await Feedback_master.feedback.set()

    elif call.data == 'five_star':
        keyboard = types.InlineKeyboardMarkup(
            inline_keyboard=[
                [
                    InlineKeyboardButton(text='‚≠êÔ∏è', callback_data='one_star'),
                    InlineKeyboardButton(text='‚≠êÔ∏è', callback_data='two_star'),
                    InlineKeyboardButton(text='‚≠êÔ∏è', callback_data='three_star'),
                    InlineKeyboardButton(text='‚≠êÔ∏è', callback_data='four_star'),
                    InlineKeyboardButton(text='‚≠êÔ∏è', callback_data='five_star')
                ],
                [
                    InlineKeyboardButton(text='–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å', callback_data='—Åonfirm')
                ]
            ]
        )
        star = 5
        await state.update_data(star=star)
        await call.message.edit_text(text='2/3. –ù–∞–∂–º–∏—Ç–µ "–ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å" –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –æ—Ü–µ–Ω–∫–∏')
        await call.message.edit_reply_markup(reply_markup=keyboard)
        await Feedback_master.feedback.set()


@dp.callback_query_handler(text='—Åonfirm', state=Feedback_master.feedback)
async def feedback(call: types.CallbackQuery, state: FSMContext):
    data = await state.get_data()
    star = data.get("star")
    user_id = data.get('user_id')
    await postgres.add_rating_master(user_id=user_id, client_id=call.from_user.id, rating=star)
    await call.message.edit_reply_markup()
    await call.message.edit_text(text='3/3. –ù–∞–ø–∏—à–∏—Ç–µ –æ—Ç–∑—ã–≤ –º–∞—Å—Ç–µ—Ä—É')
    await Feedback_master.recall.set()


@dp.message_handler(text='–û—Ç–º–µ–Ω–∞', state=Feedback_master.feedback)
async def feedback(call: types.CallbackQuery, state: FSMContext):
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.row('‚ù§Ô∏è–ò–∑–±—Ä–∞–Ω–Ω–æ–µ', 'üìù –°–æ–∑–¥–∞—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ —É—Å–ª—É–≥—É')
    keyboard.row('üèÖ –ù–∞–π—Ç–∏ –º–∞—Å—Ç–µ—Ä–∞ –ø–æ —Ä–µ–π—Ç–∏–Ω–≥—É', 'üí¨ –ö–∞–Ω–∞–ª/–ß–∞—Ç')
    keyboard.row('üí∞ –ö–æ—à–µ–ª–µ–∫', 'üìÇ –ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å')
    keyboard.row('‚ÑπÔ∏è–ö–∞–∫ —Ä–∞–±–æ—Ç–∞—Ç—å —Å –±–æ—Ç–æ–º')
    await bot.send_message(chat_id=call.from_user.id, text=f"–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", reply_markup=keyboard)
    await state.finish()

@dp.message_handler(text='–û—Ç–º–µ–Ω–∞', state=Feedback_master.recall)
async def feedback(call: types.CallbackQuery, state: FSMContext):
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.row('‚ù§Ô∏è–ò–∑–±—Ä–∞–Ω–Ω–æ–µ', 'üìù –°–æ–∑–¥–∞—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ —É—Å–ª—É–≥—É')
    keyboard.row('üèÖ –ù–∞–π—Ç–∏ –º–∞—Å—Ç–µ—Ä–∞ –ø–æ —Ä–µ–π—Ç–∏–Ω–≥—É', 'üí¨ –ö–∞–Ω–∞–ª/–ß–∞—Ç')
    keyboard.row('üí∞ –ö–æ—à–µ–ª–µ–∫', 'üìÇ –ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å')
    keyboard.row('‚ÑπÔ∏è–ö–∞–∫ —Ä–∞–±–æ—Ç–∞—Ç—å —Å –±–æ—Ç–æ–º')
    await bot.send_message(chat_id=call.from_user.id, text=f"–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", reply_markup=keyboard)
    await state.finish()


@dp.message_handler(state=Feedback_master.recall)
async def feedback_client(message: types.Message, state: FSMContext):
    recall = message.text
    data = await state.get_data()
    user_id = data.get("user_id")
    name_recall = message.from_user.full_name
    if await postgres.check_recall_master(user_id=user_id):
        await postgres.add_recall_master(user_id=user_id, recall=recall, name_recall=name_recall)
        with open(f'feedback_master/{user_id}.txt', 'a', encoding='utf-8') as file:
            file.write(f'–û—Ç–∑—ã–≤ –æ—Å—Ç–∞–≤–∏–ª(–∞): {name_recall}\n'
                       f'–û—Ç–∑—ã–≤: {recall}\n\n')
        keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
        keyboard.row('‚ù§Ô∏è–ò–∑–±—Ä–∞–Ω–Ω–æ–µ', 'üìù –°–æ–∑–¥–∞—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ —É—Å–ª—É–≥—É')
        keyboard.row('üèÖ –ù–∞–π—Ç–∏ –º–∞—Å—Ç–µ—Ä–∞ –ø–æ —Ä–µ–π—Ç–∏–Ω–≥—É', 'üí¨ –ö–∞–Ω–∞–ª/–ß–∞—Ç')
        keyboard.row('üí∞ –ö–æ—à–µ–ª–µ–∫', 'üìÇ –ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å')
        keyboard.row('‚ÑπÔ∏è–ö–∞–∫ —Ä–∞–±–æ—Ç–∞—Ç—å —Å –±–æ—Ç–æ–º')
        await bot.send_message(chat_id=message.from_user.id, text='–í—ã —É—Å–ø–µ—à–Ω–æ –æ—Å—Ç–∞–≤–∏–ª–∏ –æ—Ç–∑—ã–≤ –º–∞—Å—Ç–µ—Ä—É', reply_markup=keyboard)
        await state.finish()



    else:
        await postgres.add_recall_master(user_id=user_id, recall=recall, name_recall=name_recall)
        with open(f'feedback_master/{user_id}.txt', 'w', encoding='utf-8') as file:
            file.write(f'–û—Ç–∑—ã–≤ –æ—Å—Ç–∞–≤–∏–ª(–∞): {name_recall}\n'
                       f'–û—Ç–∑—ã–≤: {recall}\n\n')

        keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
        keyboard.row('‚ù§Ô∏è–ò–∑–±—Ä–∞–Ω–Ω–æ–µ', 'üìù –°–æ–∑–¥–∞—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ —É—Å–ª—É–≥—É')
        keyboard.row('üèÖ –ù–∞–π—Ç–∏ –º–∞—Å—Ç–µ—Ä–∞ –ø–æ —Ä–µ–π—Ç–∏–Ω–≥—É', 'üí¨ –ö–∞–Ω–∞–ª/–ß–∞—Ç')
        keyboard.row('üí∞ –ö–æ—à–µ–ª–µ–∫', 'üìÇ –ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å')
        keyboard.row('‚ÑπÔ∏è–ö–∞–∫ —Ä–∞–±–æ—Ç–∞—Ç—å —Å –±–æ—Ç–æ–º')
        await bot.send_message(chat_id=message.from_user.id, text='–í—ã —É—Å–ø–µ—à–Ω–æ –æ—Å—Ç–∞–≤–∏–ª–∏ –æ—Ç–∑—ã–≤ –º–∞—Å—Ç–µ—Ä—É', reply_markup=keyboard)
        await state.finish()
