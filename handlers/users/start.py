from datetime import datetime

from aiogram import types
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters.builtin import CommandStart
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton

from data.prolong_sub import prolong_sub
from filters import CheckUsers
from filters.check_user import CheckAdmin
from loader import dp, bot
from states.state_users import Register_user
from utils.db_api import postgres


@dp.message_handler(CommandStart(), CheckAdmin())
async def bot_start(message: types.Message):
    await prolong_sub(user_id=message.from_user.id)
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.row('‚ù§Ô∏è–ò–∑–±—Ä–∞–Ω–Ω–æ–µ', 'üìù –°–æ–∑–¥–∞—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ —É—Å–ª—É–≥—É')
    keyboard.row('üèÖ –ù–∞–π—Ç–∏ –º–∞—Å—Ç–µ—Ä–∞ –ø–æ —Ä–µ–π—Ç–∏–Ω–≥—É', 'üí¨ –ö–∞–Ω–∞–ª/–ß–∞—Ç')
    keyboard.row('üí∞ –ö–æ—à–µ–ª–µ–∫', 'üìÇ –ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å')
    keyboard.row('‚ÑπÔ∏è–ö–∞–∫ —Ä–∞–±–æ—Ç–∞—Ç—å —Å –±–æ—Ç–æ–º', 'üë®‚Äçüíª –ê–¥–º–∏–Ω')
    await bot.send_message(chat_id=message.from_user.id,
                           text='–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å. –ë–æ—Ç —Å–æ–∑–¥–∞–Ω –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã —Å–≤–æ–¥–∏—Ç—å –º–∞—Å—Ç–µ—Ä–æ–≤ –∏ –∫–ª–∏–µ–Ω—Ç–æ–≤',
                           reply_markup=keyboard)

@dp.message_handler(CommandStart(), CheckUsers())
async def bot_start(message: types.Message):
    await prolong_sub(user_id=message.from_user.id)
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.row('‚ù§Ô∏è–ò–∑–±—Ä–∞–Ω–Ω–æ–µ', 'üìù –°–æ–∑–¥–∞—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ —É—Å–ª—É–≥—É')
    keyboard.row('üèÖ –ù–∞–π—Ç–∏ –º–∞—Å—Ç–µ—Ä–∞ –ø–æ —Ä–µ–π—Ç–∏–Ω–≥—É', 'üí¨ –ö–∞–Ω–∞–ª/–ß–∞—Ç')
    keyboard.row('üí∞ –ö–æ—à–µ–ª–µ–∫', 'üìÇ –ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å')
    keyboard.row('‚ÑπÔ∏è–ö–∞–∫ —Ä–∞–±–æ—Ç–∞—Ç—å —Å –±–æ—Ç–æ–º')
    await bot.send_message(chat_id=message.from_user.id,
                           text='–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å. –ë–æ—Ç —Å–æ–∑–¥–∞–Ω –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã —Å–≤–æ–¥–∏—Ç—å –º–∞—Å—Ç–µ—Ä–æ–≤ –∏ –∫–ª–∏–µ–Ω—Ç–æ–≤',
                           reply_markup=keyboard)


@dp.message_handler(CommandStart())
async def bot_start(message: types.Message):
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.row('üåÜ –ú–æ—Å–∫–≤–∞', 'üèô –°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥')
    await bot.send_message(chat_id=message.from_user.id,
                           text='–î–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –±–æ—Ç–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–æ–π—Ç–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é. \n'
                                '\n'
                                '–í—ã–±–µ—Ä–∏—Ç–µ –≥–æ—Ä–æ–¥, –Ω–∞–∂–∞–≤ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ',
                           reply_markup=keyboard)
    await Register_user.City.set()


@dp.message_handler(text=['üåÜ –ú–æ—Å–∫–≤–∞', 'üèô –°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥'], state=Register_user.City)
async def set_user_name(message: types.Message, state: FSMContext):
    city = ''
    if message.text == 'üåÜ –ú–æ—Å–∫–≤–∞':
        city += '–ú–æ—Å–∫–≤–∞'

    if message.text == 'üèô –°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥':
        city += '–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥'
    keyboard = ReplyKeyboardMarkup(
        keyboard=[
            [
                KeyboardButton(text='üì≤ –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç', request_contact=True)
            ],
            [
                KeyboardButton(text='‚¨ÖÔ∏è –Ω–∞–∑–∞–¥')
            ]
        ],
        resize_keyboard=True
    )
    await state.update_data(city=city)
    await bot.send_message(chat_id=message.from_user.id,
                           text=f"–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç",
                           reply_markup=keyboard)
    await Register_user.phone_number.set()


@dp.message_handler(content_types=types.ContentType.CONTACT, state=Register_user.phone_number)
async def master_start(message: types.Message, state: FSMContext):
    data = await state.get_data()
    city = data.get("city")
    phone_number = int(message.contact.phone_number)
    user_id = message.from_user.id
    name_user = message.from_user.full_name
    fio = '–ü—É—Å—Ç–æ'
    date_reg = datetime.now()
    photo = 'AgACAgIAAxkBAAInv2A7qRSh6NFGyVuxfUjLSgl-xUAnAAI4szEbsP_ZSaBdq-h_Hl8S0Kcjmy4AAwEAAwIAA20AA0uoAwABHgQ'
    metro = '–ü—É—Å—Ç–æ'
    address = '–ü—É—Å—Ç–æ'
    insta = '–ü—É—Å—Ç–æ'
    vk = '–ü—É—Å—Ç–æ'
    telegram = '–ü—É—Å—Ç–æ'
    about_me = '–ü—É—Å—Ç–æ'
    purse = -1
    manicure_pedicure = '–ü—É—Å—Ç–æ'
    hairdresser = '–ü—É—Å—Ç–æ'
    visage = '–ü—É—Å—Ç–æ'
    other_services = '–ü—É—Å—Ç–æ'
    favorites = -1
    await postgres.add_user_in_database(user_id=user_id, name_user=name_user, phone_number=phone_number, fio=fio,
                                        photo=photo, city=city, metro=metro, address=address, insta=insta, vk=vk,
                                        telegram=telegram, about_me=about_me, date_reg=date_reg, purse=purse,
                                        manicure_pedicure=manicure_pedicure, hairdresser=hairdresser, visage=visage, other_services=other_services, favorites=favorites)

    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.row('‚ù§Ô∏è–ò–∑–±—Ä–∞–Ω–Ω–æ–µ', 'üìù –°–æ–∑–¥–∞—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ —É—Å–ª—É–≥—É')
    keyboard.row('üèÖ –ù–∞–π—Ç–∏ –º–∞—Å—Ç–µ—Ä–∞ –ø–æ —Ä–µ–π—Ç–∏–Ω–≥—É', 'üí¨ –ö–∞–Ω–∞–ª/–ß–∞—Ç')
    keyboard.row('üí∞ –ö–æ—à–µ–ª–µ–∫', 'üìÇ –ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å')
    keyboard.row('‚ÑπÔ∏è–ö–∞–∫ —Ä–∞–±–æ—Ç–∞—Ç—å —Å –±–æ—Ç–æ–º')

    await message.answer(text=f"{message.from_user.full_name}, —ç—Ç–æ –≤–∞—à–µ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.\n"
                              f"–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤–∞—à –ø—Ä–æ—Ñ–∏–ª—å –∏ –≤—ã–±–µ—Ä–∏—Ç–µ –±—ã—Ç—å –º–∞—Å—Ç–µ—Ä–æ–º –∏–ª–∏ –∫–ª–∏–µ–Ω—Ç–æ–º", reply_markup=keyboard)
    await state.finish()
